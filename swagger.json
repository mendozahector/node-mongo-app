{
  "openapi": "3.0.3",
  "info": {
    "title": "My NodeJS Demo with OpenAPI 3.0",
    "description": "\nDeveloping a secure REST API that performs CRUD operations on a NoSQL database.\n\nBy: Hector Mendoza\n\n[mendozahector.github.io](https://mendozahector.github.io/)\n\n\n\nTech Stack:\n- [Node.js / Express](https://expressjs.com/en/starter/hello-world.html)\n- [MongoDB](https://www.mongodb.com/docs/drivers/node/current/quick-start/)\n- [Mongoose](https://www.npmjs.com/package/mongoose)\n- [SwaggerUI](https://www.npmjs.com/package/swagger-ui-express)",
    "contact": {
      "email": "hectormmendozar@outlook.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "2.0.0"
  },
  "servers": [
    {
      "url": "https://mendozahectorapi.onrender.com",
      "description": "Render"
    },
    {
      "url": "http://localhost:3000",
      "description": "Sandox"
    }
  ],
  "tags": [
    {
      "name": "main",
      "description": "API Controller"
    },
    {
      "name": "users",
      "description": "Access to users in MongoDB"
    },
    {
      "name": "auth",
      "description": "Authenticate by user login"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": ["main"],
        "summary": "Welcome message and information",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful Operation - Returns main message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainMessage"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["users"],
        "summary": "get all users",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful Operation - Returns all users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["users"],
        "summary": "add a new user",
        "description": "",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Successful Operation - Returns new user ID and username",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewUser"
                }
              }
            }
          },
          "400": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "example": "newFirst"
                  },
                  "middleName": {
                    "example": "Optional"
                  },
                  "lastName": {
                    "example": "newLast"
                  },
                  "birthdate": {
                    "example": "yyyy-mm-dd"
                  },
                  "username": {
                    "example": "newUser"
                  },
                  "email": {
                    "example": "newEmail"
                  },
                  "password": {
                    "example": "CurrentPassword"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{username}": {
      "get": {
        "tags": ["users"],
        "summary": "get user information by username",
        "description": "",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation - Returns user information if found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["users"],
        "summary": "update user information by username",
        "description": "Request body must contain the valid user password. All other fields are optional",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Operation - User updated"
          },
          "400": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "example": "newFirst"
                  },
                  "middleName": {
                    "example": "Optional"
                  },
                  "lastName": {
                    "example": "newLast"
                  },
                  "birthdate": {
                    "example": "yyyy-mm-dd"
                  },
                  "username": {
                    "example": "newUser"
                  },
                  "email": {
                    "example": "newEmail"
                  },
                  "password": {
                    "example": "CurrentPassword"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": ["write"]
          }
        ]
      },
      "delete": {
        "tags": ["users"],
        "summary": "delete a user by username",
        "description": "",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation - User deleted"
          },
          "400": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": ["write"]
          }
        ]
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["auth"],
        "summary": "login user",
        "description": "",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Successful Operation - User logged in"
          },
          "400": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "example": "String"
                  },
                  "password": {
                    "example": "String"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "delete": {
        "tags": ["auth"],
        "summary": "logout user",
        "description": "",
        "responses": {
          "200": {
            "description": "Successful Operation - User logged out"
          },
          "400": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "401": {
            "description": "Authorization Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "MainMessage": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Hello there!"
          },
          "message": {
            "type": "string",
            "example": "Welcome to my API!"
          },
          "documentation": {
            "type": "string",
            "example": "https://mendozahectorapi.onrender.com/api-docs/"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "object",
            "format": "object",
            "example": "\"6375c456caec5ce8bb60df54\""
          },
          "username": {
            "type": "string",
            "example": "theUser"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "middleName": {
            "type": "string",
            "example": "Sebastian"
          },
          "lastName": {
            "type": "string",
            "example": "James"
          },
          "email": {
            "type": "string",
            "example": "john@email.com"
          },
          "birthdate": {
            "type": "string",
            "example": "1990-12-13T00:00:00.000Z"
          },
          "password": {
            "type": "string",
            "example": "$2a$10$.yfnmuLUYJ8RPVBANuI/dOn.0q"
          },
          "__v": {
            "type": "integer",
            "example": 0
          }
        }
      },
      "NewUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "637d6b9ba92b71e9579d3887"
          },
          "username": {
            "type": "string",
            "example": "theUser"
          }
        }
      },
      "ClientError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Invalid input. Please try again."
          }
        }
      },
      "AuthorizationError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "User unauthorized."
          }
        }
      },
      "ServerError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Server error occured. Please try again later."
          }
        }
      }
    },
    "securitySchemes": {
      "OAuth2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://mendozahectorapi.onrender.com/auth/",
            "tokenUrl": "https://mendozahectorapi.onrender.com/github",
            "scopes": {
              "write": "Grants write access"
            }
          }
        }
      }
    }
  }
}
